server:
  port: 80

spring:
  application:
    name: cloud-cunsumer-openfeign-order
  cloud:
    consul:
      port: 8500
      host: localhost
      discovery:
        serviceName: ${spring.application.name}
        prefer-ip-address: true #优先使用服务ip进行注册
        heartbeat:
          enabled: true
    openfeign:
      compression:
        request: #配置请求
          enabled: false
          min-request-size: 2048 #最小触发压缩大小
          mime-types: text/xml,application/xml,application/json #触发压缩的类型
        response: #配置响应
          enabled: false
      httpclient:
        hc5:
          enabled: true
      client:
        config:
#          cloud-payment-service:  单独配置服务
          default:
           #连接超时时间
           connectTimeout: 30000
           # 读取超时时间
           readTimeout: 30000
      circuitbreaker:
        enabled: true #开启熔断
        group:
          enabled: true

#logging:
#  level:
#    com:
#      it:
#        wang:
#          apis:
#            PayFeignApi: debug



# 基于次数配置
#resilience4j:
#  circuitbreaker:
#    configs:
#      default:
#        failure-rate-threshold: 50 # 调用失败达到50%后打开断路器
#        sliding-window-type: count_based # 滑动窗口类型
#        sliding-window-size: 6 # 滑动窗口大小 count_based6个请求 time_base6秒
#        minimum-number-of-calls: 6 # 每个滑动窗口的周期
#        automatic-transition-from-open-to-half-open-enabled: true # 开始过度到半开状态
#        wait-duration-in-open-state: 5s # 从开启到半开启需要5s
#        permitted-number-of-calls-in-half-open-state: 2 #半开状态允许通过的最大请求数
#        record-exceptions:
#          - java.lang.Exception
#    instances:
#      cloud-payment-service:
#        base-config: default

# 基于慢调用的降级
#resilience4j:
#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 10s # 默认1s 超过1s直接降级 (坑)
#  circuitbreaker:
#    configs:
#      default:
#        failure-rate-threshold: 50 # 调用失败达到50%后打开断路器
#        slow-call-duration-threshold: 2s # 慢调用时间阈值
#        slow-call-rate-threshold: 30 # 慢调用百分比峰值
  #        sliding-window-type: time_based # 滑动窗口类型
  #        sliding-window-size: 2 # 滑动窗口大小 count_based6个请求 time_base6秒
  #        minimum-number-of-calls: 2 # 每个滑动窗口的周期
  #        automatic-transition-from-open-to-half-open-enabled: true # 开始过度到半开状态
  #        wait-duration-in-open-state: 5s # 从开启到半开启需要5s
  #        permitted-number-of-calls-in-half-open-state: 2 #半开状态允许通过的最大请求数
  #        record-exceptions:
  #          - java.lang.Exception
  #    instances:
#      cloud-payment-service:
#        base-config: default





#舱壁
#resilience4j:
#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 10s # 默认1s 超过1s直接降级 (坑)
#  bulkhead:
#    configs:
#      default:
#        maxConcurrentCalls: 2
#        maxWaitDuration: 20ms
#    instances:
#        cloud-payment-service:
#          base-config: default


#限流
#resilience4j:
#  ratelimiter:
#    configs:
#      default:
#        limit-for-period: 2 # 一次刷新周期内允许最大的请求数
#        limit-refresh-period: 1s # 刷新周期
#        timeout-duration: 1 # 默认等待时间
#    instances:
#      cloud-payment-service:
#        base-config: default

# 配置链路
#management:
#  zipkin:
#    tracing:
#      endpoint: http://localhost:9411/api/v2/spans
#  tracing:
#    sampling:
#      probability: 1.0 # 采样率,默认值0.1(就是10%的链路会被记录下来)

